version: '3.8'

services:
  # Frontend React application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - notes-network
    restart: unless-stopped

  # Backend API (optional - for future NestJS BFF)
  backend:
    image: notes-backend:latest
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=http://localhost:3000
    networks:
      - notes-network
    restart: unless-stopped
    profiles:
      - backend

  # Database (optional - if not using Supabase)
  database:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=notesuite
      - POSTGRES_USER=${DB_USER:-notesuite}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - notes-network
    restart: unless-stopped
    profiles:
      - database

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - notes-network
    restart: unless-stopped
    profiles:
      - cache

networks:
  notes-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: